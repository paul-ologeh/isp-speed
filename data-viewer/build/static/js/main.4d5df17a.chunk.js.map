{"version":3,"sources":["utils/dataReducer.js","components/SpeedChart.js","components/ProviderCharts.js","components/HostChart.js","components/ActivityFeed.js","App.js","reportWebVitals.js","index.js"],"names":["getProviderCummulative","data","providerData","i","Provider","Upload","Download","Count","_data","ignore","key","includes","toFixed","push","dataRecents","now","Date","newData","JSON","parse","stringify","slice","Math","max","length","reverse","timeLapsed","getTime","RecordTime","date","meta","Host","summary","image","process","compare","a","b","comparison","getHostData","hostData","idx","indexOf","sort","n","propAverage","prop","yest","today","avg","refDate","getDate","getMonth","getFullYear","countToday","count","setDate","filterTime","timeDuration","new_data","normaliseAllData","undefined","year","month","isNaN","dataObject","value","compare2","CustomTooltip","active","payload","label","milliseconds","humanDateFormat","toLocaleString","className","SpeedChart","state","_max","dataMax","this","props","parseFloat","parseInt","ceil","setState","calculateDomain","prevProps","prevState","ResponsiveContainer","width","height","AreaChart","margin","top","right","left","bottom","CartesianGrid","XAxis","dataKey","name","domain","tickFormatter","unixTime","moment","format","YAxis","Label","position","angle","style","textAnchor","Tooltip","content","Legend","Area","type","stroke","activeDot","r","PureComponent","ProviderChart","ComposedChart","layout","padding","Bar","barSize","fill","COLORS","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","entry","x","cos","y","sin","dominantBaseline","HostPie","PieChart","Pie","labelLine","map","Cell","formatter","replace","ActivityFeed","centered","Feed","events","rootStyle","minHeight","App","allData","dataNorm","open","recents","showSideBar","header","description","toggleSideBar","handleChange","e","fetch","response","json","console","debug","recordset","avgDownloadToday","avgDownloadYesterday","pctChangeDownload","avgUploadToday","avgUploadYesterday","pctChangeUpload","testsToday","testsYesterday","pctChangeTests","pctChangeTotal","clear","callAPI","Grid","padded","columns","Sidebar","as","Menu","animation","icon","inverted","vertical","visible","onHide","Item","Image","size","circular","src","Header","onClick","window","location","Icon","Modal","closeIcon","trigger","onClose","onOpen","Content","Form","Group","Field","Checkbox","radio","checked","onChange","href","Column","backgroundColor","Row","Button","color","Card","items","Segment","textAlign","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d5df17a.chunk.js","sourcesContent":["export function getProviderCummulative(data) {\n    let providerData = {}\n    for (let i in data)\n    {\n        if (!(data[i].Provider in providerData))\n        {\n            providerData[data[i].Provider] = { Provider: data[i].Provider, Upload: 0, Download: 0, Count: 0}\n        }\n        providerData[data[i].Provider].Upload += data[i].Upload\n        providerData[data[i].Provider].Download += data[i].Download\n        providerData[data[i].Provider].Count += 1\n    }\n    let _data = []\n    let ignore = ['WorldStream', 'Total', 'Performive', null]\n    for (const key in providerData)\n    {\n        if (ignore.includes(providerData[key].Provider)) \n        {\n            continue;    \n        }\n        providerData[key].Upload /= providerData[key].Count;\n        providerData[key].Upload = providerData[key].Upload.toFixed(2)\n        providerData[key].Download /= providerData[key].Count;\n        providerData[key].Download = providerData[key].Download.toFixed(2)\n        _data.push(providerData[key])\n    }\n    return _data\n}\n\nexport function dataRecents(data) {\n    const now = new Date()\n    let newData = JSON.parse(JSON.stringify(data.slice(Math.max(data.length - 4, 0))))\n    newData.reverse()\n    for (let i in newData)\n    {\n        let timeLapsed = now.getTime() - new Date(newData[i].RecordTime).getTime()\n        timeLapsed /= (1000 * 60 * 60)\n        if (timeLapsed <= 1.5)\n        {\n            timeLapsed = 'Less than 1 hour ago'\n        }\n        else if (timeLapsed > 24)\n        {\n            timeLapsed = 'More than a day ago'\n        }\n        else {\n            timeLapsed = `About ${timeLapsed.toFixed(0)} hours ago`\n        }\n        \n        newData[i].date = timeLapsed\n        newData[i].meta = newData[i].Host;\n        newData[i].summary = `Download: ${newData[i].Download} Mbps   Upload: ${newData[i].Upload} Mbps`\n        if (newData[i].Provider === 'EE')\n        {\n            newData[i].image = process.env.PUBLIC_URL + '/EE.jpg';    \n        }\n        else if (newData[i].Provider === 'Three')\n        {\n            newData[i].image = process.env.PUBLIC_URL + '/Three.png';    \n        }\n        delete newData[i].RecordTime;\n        delete newData[i].Provider;\n        delete newData[i].Download;\n        delete newData[i].Upload;\n    }\n    return newData;\n}\n\nfunction compare(a, b) {\n  let comparison = 0;\n  if (a.Count > b.Count) {\n    comparison = 1;\n  } else if (a.Count < b.Count) {\n    comparison = -1;\n  }\n  return comparison;\n}\n\nexport function getHostData(data) {\n    let hostData = {}\n    for (let i in data)\n    {\n        let key = data[i].Host\n        if (null in data[i] || key === null)\n        {\n            continue;    \n        }\n        let idx = key.indexOf('[')\n        key = key.slice(0, idx)\n        if (!(key in hostData))\n        {\n            hostData[key] = {Host: key, Count: 0}\n        }\n        hostData[key].Count += 1\n    }\n\n    let _data = []\n\n    for (const key in hostData)\n    {\n        _data.push(hostData[key]) \n    }\n    _data.sort(compare)\n    let n = _data.length\n    return _data.slice(n - 4, n);\n}\n\nexport function propAverage(data, prop, yest) {\n    const today = new Date()\n    let avg = 0;\n    for (let i = 0; i < data.length; i++) {\n        if (yest) {\n            let refDate = new Date(data[i].RecordTime);\n            if (refDate.getDate() === today.getDate() && refDate.getMonth() === today.getMonth() && refDate.getFullYear() === today.getFullYear()) {\n                continue;\n             }\n        }\n        avg += data[i][prop]\n    }\n    avg = avg / data.length;\n    return avg.toFixed(1);\n}\n\nexport function countToday(data, yest) {\n    let count = 0;\n    const today = new Date();\n    if (yest) {\n        today.setDate(today.getDate() - 1);\n    }\n    for (let i = data.length - 1; i >= 0; i--){\n        let refDate = new Date(data[i].RecordTime)\n        if (refDate.getDate() === today.getDate() && refDate.getMonth() === today.getMonth() && refDate.getFullYear() === today.getFullYear()) {\n            count++\n        }\n    }\n    return count;\n}\n\nexport function filterTime(data, timeDuration)\n{\n    let new_data = []\n    const today = new Date();\n    for (let i in data)\n    {\n        let refDate = new Date(data[i].RecordTime)\n        if (timeDuration === '30 days')\n        {\n            let diff = (today.getTime() - refDate.getTime()) / (1000 * 60 * 60 * 24)\n            if (diff <= 30)\n            {\n                new_data.push(data[i])    \n            }\n        }\n        else if (timeDuration === '7 days')\n        {\n            let diff = (today.getTime() - refDate.getTime()) / (1000 * 60 * 60 * 24)\n            if (diff <= 7)\n            {\n                new_data.push(data[i])    \n            }\n        }\n        else if (timeDuration === '24 hours')\n        {\n            let diff = (today.getTime() - refDate.getTime()) / (1000 * 60 * 60)\n            if (diff <= 24)\n            {\n                new_data.push(data[i])\n                \n            }\n        }\n    }\n    return new_data\n}\n\nexport function normaliseAllData(data) {\n    if (data === undefined)\n    {\n        return null\n    }\n    let _data = []\n    for (let i = 0; i < data.length; i++)\n    {\n        let refDate = new Date(data[i].RecordTime)\n        let year = refDate.getFullYear()\n        let month = refDate.getMonth() + 1\n        \n        if (isNaN(year) || isNaN(month))\n        {\n            continue;    \n        }\n\n        let key = `${year}${month}`\n        if (!(key in _data))\n        {\n            _data[key] = []\n        }\n        _data[key].push(data[i])\n    }\n\n    let newData = []\n    for (const key in _data)\n    {\n        const dataObject = { Download: 0, Upload: 0, Provider: null, RecordTime: null }\n        dataObject.RecordTime = _data[key][0].RecordTime;\n        dataObject.Provider = _data[key][0].Provider;\n        for (let value in _data[key])\n        {\n            dataObject.Download += _data[key][value].Download;\n            dataObject.Upload += _data[key][value].Upload;\n        }\n        dataObject.Download /= _data[key].length;\n        dataObject.Upload /= _data[key].length;\n        dataObject.Download = dataObject.Download.toFixed(1)\n        dataObject.Upload = dataObject.Upload.toFixed(1)\n        newData.push(dataObject)\n    }\n    newData.sort(compare2)\n    return newData;\n}\n\nfunction compare2(a, b) {\n  let comparison = 0;\n  if (a.RecordTime > b.RecordTime) {\n    comparison = 1;\n  } else if (a.RecordTime < b.RecordTime) {\n    comparison = -1;\n  }\n  return comparison;\n}","import React, { PureComponent } from 'react';\nimport {\n   ResponsiveContainer, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label\n} from 'recharts';\nimport moment from 'moment'\nimport '../App.css'\n\n\nconst CustomTooltip = ({ active, payload, label, timeDuration }) => {\n    if (active && payload !== undefined && payload !== null) {\n        const milliseconds = payload[0].payload.RecordTime\n        const dateObject = new Date(milliseconds);\n        const humanDateFormat = dateObject.toLocaleString();\n    return (\n        <div className=\"custom-tooltip\">\n        {timeDuration === 'All Time' ? null : <p className=\"desc\">Timestamp: {humanDateFormat} </p> }\n        { timeDuration === 'All Time' ? null: <p className=\"desc\">Provider: {payload[0].payload.Provider}</p>}\n        <p className=\"desc\">Download Speed: {payload[0].payload.Download} Mbps</p>\n        <p className=\"desc\">Upload Speed: {payload[0].payload.Upload} Mbps</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\n\nexport default class SpeedChart extends PureComponent {\n\n  state = {\n    _max: 0\n  }\n\n  calculateDomain() {\n    let dataMax = 0\n    for (let i in this.props.data)\n    {\n      dataMax = parseFloat(this.props.data[i].Download) > dataMax ? parseFloat(this.props.data[i].Download) : dataMax;\n      dataMax = parseFloat(this.props.data[i].Upload) > dataMax ? parseFloat(this.props.data[i].Upload) : dataMax;\n    }\n    dataMax = parseInt(Math.ceil((dataMax + 10) / 10) * 10)\n    this.setState({ _max: dataMax })\n  }\n\n  componentDidMount() {\n    this.calculateDomain()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props.data)\n    {\n      this.calculateDomain()  \n    }\n  }\n\n  render() {\n    return (\n       <ResponsiveContainer width={\"100%\"} height={200}>\n        <AreaChart\n            data={this.props.data}\n            margin={{\n              top: 5, right: 20, left: 20, bottom: 5,\n            }}\n          >\n            <CartesianGrid />\n              <XAxis\n                  dataKey=\"RecordTime\"\n                  name='Time'\n                  domain={['auto', 'auto']}\n                  tickFormatter={this.props.timeDuration === 'All Time' ? (unixTime) => moment(unixTime).format('MMM YY') : (unixTime) => moment(unixTime).format('HH:mm Do')}\n              // https://momentjs.com/docs/\n              />\n              <YAxis  domain={[0, this.state._max]}>\n                <Label\n                  value={\"Speed (Mbps)\"}\n                  position=\"left\"\n                  angle={-90}\n                  style={{ textAnchor: \"middle\" }}\n                  />\n              </YAxis>\n             <Tooltip content={<CustomTooltip timeDuration={this.props.timeDuration }/>}/>\n              <Legend />\n              <Area type=\"monotone\" dataKey=\"Download\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n              <Area type=\"monotone\" dataKey=\"Upload\" stroke=\"#82ca9d\" />\n          </AreaChart>\n        </ResponsiveContainer>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  ComposedChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer,Legend,\n} from 'recharts';\n\nexport default class ProviderChart extends PureComponent {\n\n    state = {\n    _max: 0\n  }\n\n  calculateDomain() {\n    let dataMax = 0\n    for (let i in this.props.data)\n    {\n      dataMax = parseFloat(this.props.data[i].Download) > dataMax ? parseFloat(this.props.data[i].Download) : dataMax;\n      dataMax = parseFloat(this.props.data[i].Upload) > dataMax ? parseFloat(this.props.data[i].Upload) : dataMax;\n    }\n    dataMax = parseInt(dataMax + 1)\n    this.setState({ _max: dataMax })\n  }\n\n    componentDidMount() {\n    this.calculateDomain()\n  }\n\n  componentDidUpdate(prevState, prevProps) {\n    if (prevProps !== this.props.state)\n    {\n      this.calculateDomain()  \n    }\n  }\n\n  render() {\n    return (\n      <ResponsiveContainer width={\"100%\"} height={300}>\n        <ComposedChart\n          layout=\"vertical\"\n            data={this.props.data}\n          margin={{\n            top: 20, right: 20, bottom: 20, left: 20,\n          }}\n        >\n        <XAxis type=\"number\" domain={[0, this.state._max]}/>\n          <YAxis dataKey=\"Provider\" type=\"category\" padding={{ bottom: 15 }} />\n          <Tooltip/>\n        <Legend />\n        <Bar dataKey=\"Download\" barSize={10} fill=\"#413ea0\" />\n        <Bar dataKey=\"Upload\" barSize={10} fill=\"#ff7300\" />\n        </ComposedChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  PieChart, Pie,  Cell, ResponsiveContainer, Tooltip, Legend\n} from 'recharts';\n\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index, entry\n}) => {\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\n\nconst CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload !== undefined) {\n    return (\n        <div className=\"custom-tooltip\">\n        <p className=\"desc\">Provider: {payload[0].payload.Host} </p>\n        <p className=\"desc\"># of Times Used: {payload[0].payload.Count}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default class HostPie extends PureComponent {\n\n  render() {\n      return (\n          <ResponsiveContainer width={\"100%\"} height={300}>\n      <PieChart>\n        <Pie\n          data={this.props.data}\n          // cx={200}\n          // cy={200}\n          labelLine={false}\n          label={renderCustomizedLabel}\n        //   outerRadius={\"50%\"}\n          fill=\"#8884d8\"\n          dataKey=\"Count\"\n        >\n          {\n                this.props.data.map((entry, index) =>\n                  <Cell\n                    entry={entry}\n                    key={`cell-${index}`}\n                    fill={COLORS[index % COLORS.length]}\n                  />)\n              }\n         \n            </Pie>\n            <Legend\n              formatter={(value, entry, index) => (entry.payload.payload.payload.Host.replace('(',''))}\n            />\n           <Tooltip content={<CustomTooltip />}/>\n              </PieChart>\n              </ResponsiveContainer>\n    );\n  }\n}\n\n","import React from 'react'\nimport { Feed } from 'semantic-ui-react'\nimport {ResponsiveContainer} from 'recharts';\n\n\nconst ActivityFeed = (props) =>\n{\n    return (\n        <ResponsiveContainer centered width={\"100%\"} height={300}>\n            <Feed events={props.data} />\n        </ResponsiveContainer>\n        \n    )\n}\n   \nexport default ActivityFeed","import React, { Component } from 'react';\nimport { Sidebar, Menu, Grid, Checkbox, Icon, Button, Segment, Card, Image, Header, Modal, Form} from 'semantic-ui-react';\nimport './App.css'\nimport { propAverage, countToday, getProviderCummulative, getHostData, dataRecents, filterTime , normaliseAllData} from './utils/dataReducer';\nimport SpeedChart from './components/SpeedChart';\nimport ProviderCharts from './components/ProviderCharts';\nimport HostPie from './components/HostChart';\nimport ActivityFeed from './components/ActivityFeed';\n\nconst rootStyle = {\n  height: '100vh',\n  minHeight : '100vh'\n}\n\n\nclass App extends Component {\n\n  state = {\n    allData: [],\n    dataNorm: [],\n    data: [],\n    providerData: [],\n    open: false,\n    hostData: [],\n    recents: [],\n    showSideBar: true,\n    timeDuration: 'All Time',\n    summary: [\n      { meta: 'Change Since Yesterday: 0 %', header: 'Average Download Speed', description: '0 Mbps' },\n      { meta: 'Change Since Yesterday: 0 %', header: 'Average Upload Speed', description: '0 Mbps' },\n      { meta: 'Change Since Yesterday: 0 %', header: 'Number of Tests Today', description: '0' },\n      { meta: 'Change Since Yesterday: 0 %', header: 'Total Number of Tests', description: '0' }\n    ]\n  }\n\n  async callAPI() {\n    const response = await fetch(\"http://localhost:3600/api/data\");\n    const data = await response.json();\n    console.debug('API returned')\n    console.debug(data.recordset)\n    this.setState({ allData: data.recordset });\n    let summary = [...this.state.summary];\n    let avgDownloadToday = propAverage(data.recordset, 'Download', false);\n    let avgDownloadYesterday = propAverage(data.recordset, 'Download', true);\n    let pctChangeDownload = (avgDownloadToday - avgDownloadYesterday) / avgDownloadYesterday * 100;\n    let avgUploadToday = propAverage(data.recordset, 'Upload', false);\n    let avgUploadYesterday = propAverage(data.recordset, 'Upload', true);\n    let pctChangeUpload = avgUploadYesterday ? (avgUploadToday - avgUploadYesterday) / avgUploadYesterday * 100 : 0;\n    let testsToday = countToday(data.recordset, false);\n    let testsYesterday = countToday(data.recordset, true);\n    let pctChangeTests = testsYesterday ? (testsToday - testsYesterday) / testsYesterday * 100 : 0;\n    let pctChangeTotal = data.recordset.length ? (data.recordset.length - testsToday) / data.recordset.length : 0;\n    summary[0].description = avgDownloadToday + ' Mbps';\n    summary[0].meta = 'Change Since Yesterday: ' + pctChangeDownload.toFixed(1) + ' %';\n    summary[1].description = avgUploadToday + ' Mbps';\n    summary[1].meta = 'Change Since Yesterday: ' + pctChangeUpload.toFixed(1) + ' %';\n    summary[2].description = testsToday;\n    summary[2].meta = 'Change Since Yesterday: ' + pctChangeTests.toFixed(1) + ' %';\n    summary[3].description = data.recordset.length;\n    summary[3].meta = 'Change Since Yesterday: ' + pctChangeTotal.toFixed(1) + ' %';\n    this.setState({ summary: summary });\n    this.setState({ allData: data.recordset })\n    this.setState({ data: normaliseAllData(data.recordset) });\n    this.setState({ providerData: getProviderCummulative(data.recordset) });\n    this.setState({ hostData: getHostData(data.recordset) });\n    this.setState({ recents: dataRecents(data.recordset) })\n  }\n\n  componentDidMount() {\n    console.clear()\n    this.callAPI()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.timeDuration !== this.state.timeDuration)\n    {\n      if (this.state.timeDuration === 'All Time')\n      {\n          this.setState({ data: normaliseAllData(this.state.allData) });\n      }\n      else\n      {\n        this.setState({ data: filterTime(this.state.allData, this.state.timeDuration)})\n      }\n      \n    }\n  }\n\n  toggleSideBar = () => this.setState((prevState) => ({ showSideBar: !prevState.showSideBar }))\n\n  handleChange = (e, { timeDuration}) => this.setState({ timeDuration })\n  \n  render() {\n    return (\n      <div style={rootStyle}>\n      <Grid padded columns={1} style={{ height: '100%' }}>\n        <Sidebar\n          as={Menu}\n          animation='push'\n          icon='labeled'\n          inverted\n          vertical\n          visible={this.state.showSideBar}\n          onHide={()=> this.setState({showSideBar: false})}\n          width='thin'\n        >\n          <Menu.Item as='image'>\n            <Image size='small' circular src={process.env.PUBLIC_URL + '/profile.jpg'} />\n            <br/>\n            <Menu.Header>Welcome Paul!</Menu.Header>\n          </Menu.Item>\n            <Menu.Item as='a' onClick={() => { window.location = '/';}}>\n            <Icon name='home' />\n            Home\n          </Menu.Item>\n          <Modal\n            closeIcon\n            open={this.state.open}\n            trigger={<Menu.Item as='a'><Icon name='edit outline' />Customize</Menu.Item>}\n            onClose={() => this.setState({ open: false })}\n            onOpen={() => this.setState({ open: true })}\n          >\n            <Header icon='edit' content='Customise Data' />\n              <Modal.Content>\n                <Form>\n                  <Form.Group>\n                  <Header>Speed Chart Time Filters</Header>\n                  <Form.Field>\n                    <Checkbox\n                      radio\n                      label='24 hours'\n                      name='checkboxRadioGroup'\n                      timeDuration='24 hours'\n                      checked={this.state.timeDuration === '24 hours'}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <Checkbox\n                      radio\n                      label='7 days'\n                      name='checkboxRadioGroup'\n                      timeDuration='7 days'\n                      checked={this.state.timeDuration === '7 days'}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <Checkbox\n                      radio\n                      label='30 days'\n                      name='checkboxRadioGroup'\n                      timeDuration='30 days'\n                      checked={this.state.timeDuration === '30 days'}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <Checkbox\n                      radio\n                      label='All Time'\n                      name='checkboxRadioGroup'\n                      timeDuration='All Time'\n                      checked={this.state.timeDuration === 'All Time'}\n                      onChange={this.handleChange}\n                    />\n                    </Form.Field>\n                    </Form.Group>\n                </Form>\n              </Modal.Content>\n          </Modal>\n          <Menu.Item as='a'>\n            <Icon name='info' />\n            About\n          </Menu.Item>\n          <Menu.Item as='a' href='https://github.com/paulologeh/ISP-Speed'>\n            <Icon name='github' />\n            Source Code\n          </Menu.Item>\n        </Sidebar>\n          <Grid.Column style={{backgroundColor: '#F0F0F0'}}>\n            <Grid.Row>\n              <Button color='black' icon onClick={() => this.setState({ showSideBar: true })}><Icon name='bars' /></Button>\n            </Grid.Row>\n            <Grid.Row centered>\n              <Card.Group centered items={this.state.summary}/>\n            </Grid.Row>\n            <Grid.Row>\n              <br/>\n              <Segment>\n                <Header as='h3' textAlign='center'>Speed Chart</Header>\n                <SpeedChart timeDuration={this.state.timeDuration} data={this.state.data}/>\n              </Segment>\n            </Grid.Row>\n            <Grid.Row>\n              <br />\n              <Grid columns='equal'>\n                <Grid.Column>\n                  <Segment>\n                    <Header as='h3' textAlign='center'>Average Cummulative Speed By Provider</Header>\n                    <ProviderCharts data={this.state.providerData} />\n                  </Segment>    \n                </Grid.Column>\n                <Grid.Column>\n                  <Segment>\n                    <Header as='h3' textAlign='center'>Top 4 Used Hosts</Header>\n                    <HostPie data={this.state.hostData}/>\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment>\n                    <Header as='h3' textAlign='center'>Recent Test Activity</Header>\n                    <ActivityFeed data={this.state.recents} />\n                  </Segment>\n                </Grid.Column>\n              </Grid>\n            </Grid.Row>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}